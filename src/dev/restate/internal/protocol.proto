syntax = "proto3";

package dev.restate.internal.protocol;

import "core.proto";
import "google/protobuf/any.proto";

option java_multiple_files = true;
option java_package = "dev.restate.generated.internal.protocol";

message StateEntry {
  bytes key = 1;
  bytes value = 2;
}

message JournalEntry {
  enum Status {
    UNSPECIFIED = 0;
    PENDING = 1;
    DONE = 2;
  }

  message GetStateEntry {
    bytes key = 1;
    bool has_value = 2; // Might be empty
    bytes value = 3;
  }

  message SetStateEntry {
    bytes key = 1;
    bytes value = 3;
  }

  message ClearStateEntry {
    bytes key = 1;
  }

  message SleepEntry {
    // This is the duration since UNIX Epoch
    int64 wake_up_time = 1;
  }

  // InternalCallEntry describes a call to another Restate service method
  message InternalCallEntry {
    restate.core.MethodIdentifier target = 1;

    // There must always be a parameter to invoke another method
    bytes parameter = 2;

    // This is filled only and only if Status == DONE
    restate.core.CallResult result = 3;
  }

  // ExternalCallEntry describes a call to an external service,
  // which result will asynchronously wake up the function at a later point in time.
  message ExternalCallEntry {
    // This is filled only and only if Status == DONE
    // Note that failure case here is filled by the sdk,
    // iff something goes wrong when executing the code that invokes the external system
    restate.core.CallResult result = 1;
  }

  message SideEffectEntry {
    bytes value = 1;
  }

  message WakeUpCallEntry {
    restate.core.ServiceInvocationId service_invocation_id = 1;
    int32 journal_index = 2;
    bytes payload = 3;
  }

  Status status = 1;

  oneof type {
    // State access
    GetStateEntry get_state = 10;
    SetStateEntry set_state = 11;
    ClearStateEntry clear_state = 12;

    // System calls to restate
    SleepEntry sleep = 20;
    InternalCallEntry internal_call = 21;
    ExternalCallEntry external_call = 22;
    SideEffectEntry side_effect = 23;
    WakeUpCallEntry wake_up_call_entry = 24;

    // Any field is provided here to allow SDKs to store arbitrary information,
    // for example to implement SDK specific features
    google.protobuf.Any unknown = 100;
  }
}

message RestateInput {
  bytes invocation_id = 1;
  bytes instance_key = 2;

  repeated StateEntry state_entries = 10;
  repeated JournalEntry journal_entries = 11;
}

message InternalBackgroundCall {
  restate.core.MethodIdentifier method = 1;

  // This is the non-compressed serialized protobuf message.
  // It's just the message and NOT Length-Prefixed-Message,
  // as described here https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests
  bytes payload = 2;
}

// CompletedCallbackCall describes a completeCallback invocation of another function
message CompleteCallbackCall {
  restate.core.ServiceInvocationId service_invocation_id = 1;
  int32 journal_index = 2;
  bytes payload = 3;
}

message RestateOutput {
  enum Status {
    UNSPECIFIED = 0;
    // This call has completed (successfully) without any coordination calls.
    // The side effects (if any) would be:
    // 1) deleted_state_entries - a list of keys to remove
    // 2) modified_state_entries - a list of changed key value bindings.
    //
    // In addition, the journal is expected to be empty.
    COMPLETED = 1;
    // This call has still instructions to execute, but it was suspended on a blocking call.
    // The reason for suspension will be the last journal element.
    // Currently it can be either:
    // 1) "sleep"
    // 2) "call" - remote service invocation.
    //
    SUSPENDED = 2;
  }

  Status status = 1;

  repeated bytes deleted_state_keys = 2;
  repeated StateEntry modified_state_entries = 3;
  repeated JournalEntry journal_entries = 4;
  repeated InternalBackgroundCall internal_background_calls = 5;
  repeated CompleteCallbackCall complete_callback_calls = 6;
}
